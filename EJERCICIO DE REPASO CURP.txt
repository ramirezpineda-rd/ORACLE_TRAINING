							INTEGRANTE

	ALUMNO:
		RUBEN DARIO RAMIREZ PINEDA C##1730461
	
______________________________________________________________________________________________________

INSTRUCCIONES PARA CREAR LAS TABLAS:


CREATE TABLE PERSONAS(
   P_ID NUMBER PRIMARY KEY,
   NOMBRE VARCHAR2(50),
   APELLIDO_PAT VARCHAR2(30),
   APELLIDO_MAT VARCHAR2(30),
   FECHA_N DATE,
   GENERO VARCHAR2(20),
   ESTADO VARCHAR2(20),
   CURP VARCHAR2(18)
);

LA TABLA FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461
_______________________________________________________________________________________________________

PROCEDIMIENTO DE ALMACENADO CREADO EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE PROCEDURE inserta_persona(p_id IN NUMBER,
                                            p_nombre IN VARCHAR2,
                                            P_A_PATERNO IN VARCHAR2,
                                            P_A_MATERNO IN VARCHAR2,
                                            P_FECHA IN DATE,
                                            P_GENERO IN VARCHAR2,
                                            P_ESTADO IN VARCHAR2) AS
v_curp varchar2(18);
BEGIN
V_CURP:=C##1730461.GENERAR_CURP(p_nombre,p_a_paterno,p_a_materno,P_fecha,p_genero,p_estado);

INSERT INTO C##1730461.PERSONA(p_id,nombre,apellido_pat,apellido_mat,fecha_n, genero, estado,CURP)
VALUES(p_id,UPPER(p_nombre),UPPER(p_a_paterno),UPPER(p_a_materno),p_fecha,UPPER(p_genero),upper(p_estado),v_curp);
END;

_____________________________________________________________________________________________________________-
FUNCION PARA GENERAR CURP
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461


CREATE OR REPLACE FUNCTION GENERAR_CURP(P_NOMBRE PERSONAS.NOMBRE%TYPE,
                                        P_APELLIDO_PAT PERSONAS.APELLIDO_PAT%TYPE,
                                        P_APELLIDO_MAT PERSONAS.APELLIDO_MAT%TYPE,
                                        P_FECHA_N PERSONAS.FECHA_N%TYPE,
                                        P_GENERO PERSONAS.GENERO%TYPE,
                                        P_ESTADO PERSONAS.ESTADO%TYPE
                                            )RETURN VARCHAR2
AS                              
V_CURP VARCHAR2(18);
BEGIN 
V_CURP:=C##1730461.F_A_PATERNO(P_APELLIDO_PAT)||C##1730461.F_A_MATERNO(P_APELLIDO_MAT)||C##1730461.F_NOMBRE(P_NOMBRE)||FECHA_ORDENADA(P_FECHA_N)||C##1730093.F_GENERO(P_GENERO)||ENTIDAD_NAC(P_ESTADO)||C##1730093.F_SDA_CONSONANTE(P_APELLIDO_PAT)||C##1730093.F_SDA_CONSONANTE(P_APELLIDO_MAT)||C##1730093.F_SDA_CONSONANTE(P_NOMBRE)||'00';
RETURN V_CURP;
END;
__________________________________________________________________________________________________________________-

						SUBFUNCIONES


F_A_PATERNO ESTA FUNCION SIRVE PARA OBTENER LA PRIMERA LETRA DEL APELLIDO PATERNO Y LA PRIMERA VOCAL
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE FUNCTION F_A_PATERNO(p_nombre employees.last_name%type)
 RETURN VARCHAR2 AS 
v_nombre VARCHAR2(25);
v_cont NUMBER(10):=2;
v_vocal VARCHAR2(25);
v_nombre_fin VARCHAR2(25);
v_band BOOLean:=TRUE;
begin
v_nombre:= substr(p_nombre,1,1);
LOOP
    v_vocal:= substr(UPPER(p_nombre),v_cont,1);
    IF(v_vocal='A' OR v_vocal='E' OR v_vocal='I' OR v_vocal='O' OR v_vocal='U') THEN
    v_band:=false;
    END IF;
    v_cont:=v_cont+1;
   EXIT WHEN v_band = FALSE;
END LOOP;
v_nombre_fin:=v_nombre||v_vocal;
v_nombre_fin:=upper(v_nombre_fin);
RETURN v_nombre_fin;
end;




___________________________________________________________________________________________________________


F_A_MATERNO ESTA FUNCION SIRVE PARA OBTENER LA PRIMERA LETRA DEL APELLIDO MATERNO
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE FUNCTION F_A_materno(p_apellido VARCHAR2)RETURN VARCHAR2 AS
V_FIN VARCHAR2(25);
BEGIN
V_FIN:=upper(substr(p_apellido,1,1));
RETURN V_FIN;
END;

_______________________________________________________________________________________________________________

F_NOMBRE ESTA FUNCION SIRVE PARA OBTENER LA INCICIAL DEL NOMBRE
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE FUNCTION f_Nombre(p_nombre VARCHAR2)RETURN VARCHAR2 AS
V_FIN VARCHAR2(25);
BEGIN
V_FIN:=upper(substr(p_nombre,1,1));
RETURN V_FIN;
END;
________________________________________________________________________________________________________________

FECHA ORDENADA ESTA FUNCION DEVUELVE LA FECHA EN EL FORMATO AAMMDD
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE FUNCTION fecha_ordenada(
                p_fecha DATE) RETURN VARCHAR2 as
v_fecha_ordenada varchar2(20);              
begin
v_fecha_ordenada:= TO_CHAR(p_fecha, 'yymmdd');
return v_fecha_ordenada;
end;

_______________________________________________________________________________________________________________

F_GENERO SIRVE PARA DEVOLVER M O H DEPENDIENDO DEL GENERO DE LA PERSONA
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE FUNCTION f_genero(p_nombre VARCHAR2)RETURN CHAR AS
V_FIN VARCHAR2(25):=upper(p_nombre);
V_m char:='H';
V_F CHAR:='M';
BEGIN

if (v_fin = 'MASCULINO') then 
RETURN V_M;
else 
RETURN v_F;
END IF;
END;

________________________________________________________________________________________________________________

ENTIDAD_NAC SIRVE PARA DEVOLVER LAS CLAVES DE LOS ESTADOS
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461


CREATE OR REPLACE FUNCTION entidad_nac(
                p_entidad personas.estado%TYPE)return  VARCHAR2 AS

estado personas.estado%TYPE;
begin
    CASE UPPER(p_entidad)
        WHEN 'AGUASCALIENTES' THEN 
    estado:='AS';
    return estado;
        WHEN 'BAJA CALIFORNIA' THEN 
    estado:='BC';
    return estado;
        WHEN 'BAJA CALIFORNIA SUR' THEN 
    estado:='BS';
    return estado;
        WHEN 'CAMPECHE' THEN 
    estado:='CC';
    return estado;
        WHEN 'CHIAPAS' THEN 
    estado:='CS';
    return estado;
        WHEN 'CHIHUAHUA' THEN 
    estado:='CH';
    return estado;
        WHEN 'CIUDAD DE MEXICO' THEN 
    estado:='DF';
    return estado;
        WHEN 'COAHUILA' THEN 
    estado:='CL';
    return estado;
        WHEN 'COLIMA' THEN 
    estado:='CM';
    return estado;
        WHEN 'DURANGO' THEN 
    estado:='DG';
    return estado;
        WHEN 'GUANAJUATO' THEN 
    estado:='GT';
    return estado;
        WHEN 'GUERRERO' THEN 
    estado:='GR';
    return estado;
        WHEN 'HIDALGO' THEN 
    estado:='HG';
    return estado;
        WHEN 'JALISCO' THEN 
    estado:='JC';
    return estado;
        WHEN 'MEXICO' THEN 
    estado:='MC';
    return estado;
        WHEN 'MICHOACAN' THEN 
    estado:='MN';
    return estado;
        WHEN 'MORELOS' THEN 
    estado:='MS';
    return estado;
        WHEN 'NAYARIT' THEN 
    estado:='NT';
    return estado;
        WHEN  'NUEVO LEON' THEN 
    estado:='NL';
    return estado;
        WHEN 'OAXACA' THEN 
    estado:='OC';
    return estado;
        WHEN 'PUEBLA' THEN 
    estado:='PL';
    return estado;
        WHEN  'QUERETARO' THEN 
    estado:='QO';
    return estado;
        WHEN 'QUINTANA ROO' THEN 
    estado:='QR';
    return estado;
        WHEN  'SAN LUIS POTOSI' THEN 
    estado:='SP';
    return estado;
       WHEN 'SINALOA' THEN 
    estado:='SL';
    return estado;
        WHEN  'SONORA' THEN 
    estado:='SR';
    return estado;
        WHEN 'TABASCO' THEN 
    estado:='TC';
    return estado;
        WHEN  'TAMAULIPAS' THEN 
    estado:='TS';
    return estado;
        WHEN  'TLAXCALA' THEN 
    estado:='TL';
    return estado;
        WHEN  'VERACRUZ' THEN 
    estado:='VZ';
    return estado;
        WHEN 'YUCATAN' THEN 
    estado:='YN';
    return estado;
        WHEN 'ZACATECAS' THEN 
    estado:='ZS';
    return estado;
    ELSE
    return estado;
    END CASE;
end;


________________________________________________________________________________________________________________________

F_SDA_CONSONANTE SIRVE PARA DEVOLVER LA SEGUNDA CONSONANTE DEL APELLIDO PATERNO, MATERNO Y EL NOMBRE
FUE CREADA EN EL ESPACIO DE TRABAJO C##1730461

CREATE OR REPLACE FUNCTION F_SDA_CONSONANTE(p_nombre employees.last_name%type)
 RETURN VARCHAR2 AS 
v_nombre VARCHAR2(25);
v_cont NUMBER(10):=2;
v_vocal VARCHAR2(25);
v_consonante VARCHAR2(25);
v_nombre_fin VARCHAR2(25);
v_band BOOLean:=TRUE;
v_band2 BOOLEAN:= TRUE;
v_band3 BOOLEAN:=TRUE;
begin
v_nombre:= substr(p_nombre,1,1);
LOOP
    v_vocal:= substr(UPPER(p_nombre),v_cont,1);
    v_consonante:= substr(UPPER(p_nombre),v_cont,1);
    IF(v_vocal='A' OR v_vocal='E' OR v_vocal='I' OR v_vocal='O' OR v_vocal='U') THEN
    v_band:=false;
    V_BAND3:=FALSE;
    END IF;
    IF(V_BAND3=FALSE AND V_VOCAL != 'A' AND V_VOCAL!='E' AND V_VOCAL!='I' AND V_VOCAL!='O' AND V_VOCAL!='U')THEN
    v_band2:=FALSE;
    END IF;
    v_cont:=v_cont+1;
   EXIT WHEN v_band = FALSE AND V_BAND2= FALSE;
END LOOP;
RETURN V_CONSONANTE;
end;

___________________________________________________________________________________________________________________-
							PERMISOS

PERMISOS QUE EJECUTO C##1730461
grant execute oN F_A_PATERNO TO C##1730461;
grant execute oN F_A_MATERNO TO C##1730461;
grant execute oN F_NOMBRE to C##1730461;
grant execute oN F_genero to C##1730461;
grant execute oN F_SDA_CONSONANTE to C##1730461;
grant execute oN inserta_persona to C##1730461;




PERMISOS QUE EJECUTO C##1730461
grant EXECUTE on GENERAR_CURP to C##1730461;
grant EXECUTE on fecha_ordenada to C##1730461;
grant EXECUTE on Letra_sexo to C##1730461;
grant EXECUTE on ENTIDAD_NAC to C##1730461;
grant EXECUTE on registro to C##1730461;
grant select, insert, update, delete ON persona to C##1730461;



